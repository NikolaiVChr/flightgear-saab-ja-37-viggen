--- a/default.frag
+++ b/default.frag
@@ -1,7 +1,10 @@
 // -*-C++-*-
 
+// CI effect
+// This is FG 2020.4 Shaders/default.vert with a call to CI shader plugged in.
+
 // Ambient term comes in gl_Color.rgb.
 #version 120
 
 varying vec4 diffuse_term;
 varying vec3 normal;
@@ -20,10 +23,14 @@
 //////////////////////
 
 float getShadowing();
 vec3 getClusteredLightsContribution(vec3 p, vec3 n, vec3 texel);
 
+//// CI code include
+vec4 CI_screen_color();
+////
+
 float luminance(vec3 color)
 {
     return dot(vec3(0.212671, 0.715160, 0.072169), color);
 }
 
@@ -57,18 +64,13 @@
     color.a = diffuse_term.a;
     // This shouldn't be necessary, but our lighting becomes very
     // saturated. Clamping the color before modulating by the texture
     // is closer to what the OpenGL fixed function pipeline does.
     color = clamp(color, 0.0, 1.0);
-    texel = texture2D(texture, gl_TexCoord[0].st);
 
-    if (orthophotoAvailable) {
-        vec4 sat_texel = texture2D(orthophotoTexture, orthoTexCoord);
-        if (sat_texel.a > 0) {
-            texel.rgb = sat_texel.rgb;
-        }
-    }
+    // CI code insert (this should be the only difference with the standard shader)
+    texel = CI_screen_color();
 
     fragColor = color * texel + specular;
     fragColor.rgb += getClusteredLightsContribution(ecPosition.xyz, n, texel.rgb);
 
     fragColor.rgb = fog_Func(fragColor.rgb, fogType);
